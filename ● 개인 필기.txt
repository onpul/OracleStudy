20220215 월----------------------------------------------------------------------------

// 우리가 배울 것은 R이 하나 더 붙어서 RDBMS 관계형 데이터베이스 관리 시스템
// 관계형 데이터베이스 관리 시스템의 양대산맥은 오라클, mssql

// ▶ Port Number
// ip --> 네트워크 상 pc가 갖는 고유한 주소, 한 개!
// Port Number --> 마치 하나의 무전기에서 채널을 여러 개 열어놓은 것

// ▶ 리스너
// == 삐끼
// 오라클에는 듣는 청취자가 있다
// 나이트클럽 삐끼...? 뒤에 이름 있어서 불러달라고 써 있음
// 쌍용나이트 몰라도 그 사람 손 잡으면 갈 수 있음 ㅋㅋ
// http --> 기본 포트가 8080이라서 얘는 안 입력해도 됨

// ▶ 물리적 하드디스크 분할, 논리적 하드디스크 분할
// 물리적 --> 씨게이트 / 웨스턴디지털
          --> 씨게이트 / 씨게이트
          --> 컴터에 꽂혀있는 하드디스크가 두 개면 물리적으로 2개임
          --> C 드라이브, D 드라이브 두 개
// 논리적 --> 파티션 분할
// 하드 디스크 하나에서 오라클 운영하는 건 권장하지 않음 (논리적 분할이어도)
// --> 물리적으로 하드디스크가 2개 이상이기를 권장함
// 한 곳에 설치했으면 다른 한 곳에 데이터 파일 넣기...
// 한 쪽의 데이터가 손실되었더라도 한 쪽에서 리커버리 할 수 있다 --> 안정성
// 이렇게 해야 성능이 좋음!!
// 같이 쓰면 성능도 떨어지고, 안정성도 떨어지고, 위험하기도 위험함!!! 

20220216 화----------------------------------------------------------------------------

// 오라클 최고 관리자 계정은 sys
// C:\Users\mj070>sqlplus sys/java006$ as sysdba
//                           패스워드/로써/권한(롤) -> 권한들의 묶음
//                                         어떤 보안카드인지

//C:\>sqlplus sys/java006$ as sysdba
//sql>connect sys/java006$ as sysdba
// 명령프롬프트 상태에서는 sqlplus를 쓰는 거고
// sql프롬프트 상태에서는 connect를 사용하는 것

// hr, scott 기본적으로 있는 계정
// 오라클을 쓰는 사람들끼리의 암묵적인 약속, 규칙 같은 거
// hr / lion
// scott / tiger
// 오라클 설치하면 테스트용 계정 같은 거
// scott은 스탠다드 에디션 이상부터 있어서 우리는 따로 만들 거임
// 이 두 가지 계정을 실습하면서 가장 많이 쓸 것

// connect 줄여서 conn

======================================================================

//C:\>sqlplus sys/java006$ as sysdba
      sqlplus hr/lion                // 일반 사용자 계정으로 접속

//sql>connect sys/java006$ as sysdba
      connect hr/lion                // 일반 사용자 계정으로 접속
      conn hr/lion

======================================================================

// select username, account_status from dba_users;

// 오라클에서 중요한 개념은 TABLE
// 표라고 생각하기

// 가입 회원이라는 표 --> 테이블
// 가입 회원이라는 이름 --> 테이블 명
// 회원 번호, 회원명, 전화번호 등의 항목명 --> 컬럼명
//--> 회원 번호 컬럼, 회원명 컬럼, 전화번호 컬럼

// 데이터의 건 수 --> 레코드 
// 테이블을 저장할 수 있는 공간 --> TABLESPACE --> 서랍
// 사물함 --> 데이터 베이스
// 사물함 속 서랍 --> TABLESPACE
// 서랍 속 파일(표) --> TABLE

======================================================================

// select username, account_status from dba_users;
// select 문을 보면 from 부터 보자
// from --> 나는 이 TABLE을 선택해서 볼 거야~
// 나는 select 얘랑 얘만 볼 거야

======================================================================

--Oracle SQL Developer
// 실무에서는 비밀번호 저장하면 안 돼

// **오라클은 예민해서 만약 안 되면 (응급처치!!)
// 서비스 창 열고
// 오라클잡 어쩌구부터 리스너까지 중에서
// 오라클서비스xe, 어쩌구listener 실행 중인지 확인하기
// 중지되어 있으면 오른쪽 마우스 클릭해서 시작 또는 다시 시작 누르기

20220217 수----------------------------------------------------------------------------

-- 변경(수정)       구조적 - ALTER
                    데이터 - UPDATE -> 커밋 필요

-- 제거(삭제)       구조적 - DROP
                    데이터 - DELETE -> 커밋 필요

-- 생성(입력)       구조적 - CREATE
                    데이터 - INSERT -> 커밋 필요

======================================================================

프로그램 속도 저하의 유력한 용의자는 네트워크, 또는 데베!!
그래서, 디비에이들은 속도에 대해 많이 고민함

데이터베이스에서의 처리가 프로그램 성능의 열쇠!


======================================================================

※ SELECT 문의 처리(PARSING) 순서   -- 외우기!!!!!
  
     SELECT 컬럼명     -- ⑤     -- 필수, 기본 / 여러 개의 컬럼들 중에 요 컬럼이야
     FROM 테이블명     -- ①     -- 필수, 기본 / 여러 개의 테이블들 중에 요 놈이야
     WHERE 조건절      -- ②     --              선택한 컬럼 중에서 경기도에 사는 사람만
     GROUP BY 절       -- ③     --              묶는 거 / 안경 쓴, 안경 안 쓴 / 남자, 여자
     HAVING 조건절     -- ④     --              묶인 것들에 대한 조건 / 인천, 경기, 서울로 묶고 충북 위로만 조건 제시
     ORDER BY 절       -- ⑥     --              정렬 / 키순, 번호순 등

FROM / WHERE / GROUP BY / HAVING / SELECT / ORDER BY
프롬 / 웨얼 / 그룹 바이 / 해빙 / 셀렉트 / 올더 바이

======================================================================


20220218 금----------------------------------------------------------------------------

-- 모든 데이터에는 데이터의 헤더와 바디가 있다
-- 우리가 다루는 건 바디쪽.
-- 이름, 유형, 크기, 만든 날짜 등의 내용은 헤더로 ...
-- 포렌식 -> 헤더가 중요
 
●SYSDATE -> 얘도 함수임

●NVL()
-- 첫 번째 파라미터 값이 NULL 이면, 두 번째 파라미터 값을 반환한다.
-- 첫 번째 파라미터 값이 NULL 이 아니면, 그 값을 그대로 반환한다.

-- 오라클에서는 자바처럼 형변환 규칙이 없기 때문에 믿을만한 게 못된다.

● BETWEEN ⓐ AND ⓑ 
-- 문자 타입일 때 중요 !
-- 사전식 배열 ....
-- 사람이 편하려고 쓰는 거. 부등호를 쓰는 게 더 빠르다.


20220221 월----------------------------------------------------------------------------

● COMMIT / ROLLBACK
- TCL 구문???

● 데이터 수정(UPDATE → TBL_DEPT)    -> DML 구문
- 1. UPDATE 쓰고 WHERE 절 쓰고 SET 마지막
- 2. WHERE 절 필요없어도 일단 쓰고 나중에 지우기

● DESC
- 두 가지 용도. 절에 따라 사용

FROM / WHERE / GROUP BY / HAVING / SELECT / ORDER BY
프롬 / 웨얼 / 그룹 바이 / 해빙 / 셀렉트 / 올더 바이

- 컬럼 인덱스는 1부터

●LPAD() --> LEFT
--> Byte를 확보하여 왼쪽부터 문자로 채우는 기능을 가진 함수
SELECT 'ORACLE' "COL1"
     , LPAD('ORACLE', 10, '*') "COL2" 
FROM DUAL;
--> 두 번째 파라미터부터 보자!

●LTRIM() 
-- 손톱깎이!!
-- O있네? 딸깍, R있네? 딸깍, A있네? 딸깍
-- 남아있는 거 반환

20220222 화----------------------------------------------------------------------------

--▶ ROUND(), TRUNC()
-- 두 번째 파라미터 값까지가 유효하다는 의미 
-- 두 번째 파라미터 값까지 표현하겠다. -> 그 다음 자리에서 반올림 또는 절삭


20220308 화----------------------------------------------------------------------------

COL1 NUMBER --> 크기 명시하지 않으면 NUMBER가 가진 최소부터 최대까지
COL2 CHAR --> 크기 명시하지 않으면 한 글자만 들어감


20220310 목----------------------------------------------------------------------------

입력 데이터를 예측할 수 있는 컬럼이라면... 반드시 '코드화'시켜라...








