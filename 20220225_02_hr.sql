SELECT USER
FROM DUAL;
--==>> HR

--○ 세 개 이상의 테이블 조인(JOIN)

-- 형식 1. (SQL 1992 CODE)
SELECT 테이블명1.컬럼명, 테이블명2.컬럼명, 테이블명3.컬럼명
FROM 테이블명1, 테이블명2, 테이블명3
WHERE 테이블명1.컬럼명1 = 테이블명2.컬럼명1
  AND 테이블명2.컬럼명2 = 테이블명3.컬럼명2;


-- 형식 2. (SQL 1999 CODE)
SELECT 테이블명1. 컬럼명, 테이블명2.컬럼명, 테이블명3.컬럼명
FROM 테이블명1 JOIN 테이블명2
ON 테이블명1.컬럼명1 = 테이블명2.컬럼명2
               JOIN 테이블명3
               ON 테이블명2.컬럼명2 = 테이블명3.컬럼명2;


--○ HR 계정 소유의 테이블 또는 뷰 목록 조회
SELECT *
FROM TAB;
--==>>
/*
COUNTRIES	        TABLE	
DEPARTMENTS	        TABLE	
EMPLOYEES	        TABLE	
EMP_DETAILS_VIEW	VIEW    --	얘는 신경 안 써두 됨
JOBS	            TABLE	
JOB_HISTORY	        TABLE	
LOCATIONS	        TABLE	
REGIONS	            TABLE	
*/

--------------------------------------------------------------------------------

--○ HR.JOBS, HR.EMPLOYEES, HR.DEPARTMENTS 테이블을 대상으로 직원들의 데이터를  -- 문제
--   FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME 항목으로 조회한다.
--   EMPLOYEES   EMPLOYEES  JOBS       DEPARTMENTS

-- 내 풀이 ---------------------------------------------------------------------

-- 테이블 먼저 조회
SELECT *
FROM JOBS;
SELECT *
FROM EMPLOYEES; -- KIMBERELY의 DEPARTMENT_ID가 NULL
SELECT *
FROM DEPARTMENTS;

-- 99 코드로
SELECT E.FIRST_NAME, E.LAST_NAME, J.JOB_TITLE, D.DEPARTMENT_NAME
FROM JOBS J JOIN EMPLOYEES E
ON J.JOB_ID = E.JOB_ID
               LEFT JOIN DEPARTMENTS D
               ON D.DEPARTMENT_ID = E.DEPARTMENT_ID; -- LEFT면 좌측을 먼저 퍼올린다.

-- 92 코드로
SELECT E.FIRST_NAME, E.LAST_NAME, J.JOB_TITLE, D.DEPARTMENT_NAME
FROM JOBS J, EMPLOYEES E, DEPARTMENTS D
WHERE J.JOB_ID = E.JOB_ID
  AND D.DEPARTMENT_ID(+) = E.DEPARTMENT_ID; -- + 없는 쪽을 먼저 메모리에 퍼올린다.

-- 수업 풀이 -------------------------------------------------------------------

--○ HR.JOBS, HR.EMPLOYEES, HR.DEPARTMENTS 테이블을 대상으로 직원들의 데이터를  
--   FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME 항목으로 조회한다.
--   ----------  ---------  ---------  ---------------
--   EMPLOYEES   EMPLOYEES  JOBS       DEPARTMENTS

SELECT *
FROM DEPARTMENTS;
-- DEPARTMENT_ID        -- 관계 컬럼

SELECT *
FROM EMPLOYEES; 
-- JOB_ID               -- 관계 컬럼

SELECT *
FROM JOBS; 

SELECT E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT COUNT(*)
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;
--==>> 106

SELECT COUNT(*)
FROM EMPLOYEES;
--==>> 107
-- OUTER 조인 해야 한다.

SELECT COUNT(*)
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;
--==>> 107

SELECT E.FIRST_NAME, E.LAST_NAME, JOB_TITLE, D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        JOIN JOBS J
          ON E.JOB_ID = J.JOB_ID;

SELECT COUNT(*)
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        JOIN JOBS J
          ON E.JOB_ID = J.JOB_ID;
--==>> 107

SELECT E.FIRST_NAME, E.LAST_NAME, JOB_TITLE, D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        JOIN JOBS J
          ON E.JOB_ID = J.JOB_ID;

--------------------------------------------------------------------------------

--○ EMPLOYEES, DEPARTMENTS, JOBS, LOCATIONS, COUNTRIES, REGIONS 테이블을 대상으로
--   직원들의 데이터를 다음과 같이 조회할 수 있도록 쿼리문을 구성한다.
--   FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME, CITY,       COUNTRY_NAME, REGION_NAME
--   EMPLOYEES   EMPLOYEES  JOBS       DEPARTMENTS      LOCATIONS   COUNTRIES     REGIONS
--    
SELECT *
FROM EMPLOYEES; -- 0
SELECT *
FROM DEPARTMENTS; -- 1
SELECT *
FROM JOBS; --2
SELECT *
FROM LOCATIONS; -- 3
SELECT *
FROM COUNTRIES; -- 4
SELECT *
FROM REGIONS; -- 5

SELECT E.FIRST_NAME, E.LAST_NAME, J.JOB_TITLE, D.DEPARTMENT_NAME
FROM JOBS J, EMPLOYEES E, DEPARTMENTS D
WHERE J.JOB_ID = E.JOB_ID
  AND D.DEPARTMENT_ID(+) = E.DEPARTMENT_ID;
  
SELECT FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME, CITY, COUNTRY_NAME, REGION_NAME
FROM EMPLOYEES E, JOBS J, DEPARTMENTS D, LOCATIONS L, COUNTRIES C, REGIONS R
WHERE J.JOB_ID = E.JOB_ID
  AND D.DEPARTMENT_ID(+) = E.DEPARTMENT_ID
  AND D.LOCATION_ID = L.LOCATION_ID(+)
  AND L.COUNTRY_ID = C.COUNTRY_ID(+)
  AND C.REGION_ID = R.REGION_ID(+);
  
SELECT T.* ,CITY
FROM
(
    SELECT FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME
    FROM EMPLOYEES E LEFT JOIN JOBS J
    ON J.JOB_ID = E.JOB_ID
            JOIN DEPARTMENTS D
              ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
)
T JOIN LOCATIONS L
    ON T.D.LOCATION_ID = L.LOCATION_ID;

-- 아직 풀이 중 / 따로 풀이 안 한다 하셨음 ㅠㅠ 소회의실에서 열었으나 충희 오빠만 완료