1. 최문정
오라클 세미 프로젝트를 통해 논리적인 데이터 구조 설계부터 물리적인 데이터 구조 구현까지의 전반적인 과정에 주체적으로 참여하며 오라클을 더욱 깊이 있게 이해할 수 있었다. 프로젝트 초반, 요구분석서를 바탕으로 필요한 테이블과 컬럼을 도출해내는 것이 쉽지 않았지만 실무에서 경험할 것을 미리 연습한다 생각하며 꼼꼼하게 정리하게 되었고 팀원들과 함께 공유 문서에 종류별로 목록화 해놓은 것이 프로젝트 진행에 큰 도움이 되었다. 또한 ERD를 설계하며 각 테이블의 종속 관계, 제약조건에 대해 부족했던 개념을 다시 찾아보고 적용하며 확실히 이해할 수 있게 되었다. 요구분석서에서 도출한 내용을 바탕으로 프로시저를 구현하며 수업에서 배운 전반적인 내용을 직접 복습해 볼 수 있어서 큰 도움이 되었다. 또한 출력을 위한 뷰를 설계하며 한 쿼리에 많은 조인을 사용하게 되었는데 출력 내용이 많아지니 조인 순서와 컬럼을 고려하는 것이 조금 어려웠다. 쿼리를 구성하기 위해 테이블 구조에 대해 논리적으로 확실히 파악하는 것이 우선시 되어야 한다는 것을 다시금 느낄 수 있었다. 이전 팀원들과 정반대의 분위기인 팀이어서 팀원과 소통하는 법에 대해 고민해 보는 시간이 되기도 했다. 이전과 이번 프로젝트 모두, 주도적으로 참여할수록 얻는 것은 훨씬 많다는 것을 느꼈다. 한 역할은 크지 않지만 팀장을 맡아 더욱 책임감을 갖고 참여한 프로젝트였다. 부족한 개념들을 복습하여 더욱 탄탄한 실력을 가지고 싶다. 팀원 모두 약속을 한 듯 일의 분배가 척척되었고, 모두 기한 안에 제출해 주었다. 함께한 팀원들에게 감사하다.

2. 김민성
이번 세미 프로젝트를 진행하면서, 관계형 데이터베이스가 논리적으로 테이블을 구성하거나 프로시저 등을 구성하는 것이 얼마나 뛰어난 성능을 내고, 조그마한 실수가 있다면 수정조차 힘든 그런 걸 먼저 깨달았습니다. 관계를 가진 테이블 끼리는 수정 삭제 조차 힘들고 또 잘못 건드렸다간 많은 것들이 바뀌기 때문에 
한번 테스트 하는데도 신중의 신중을 했던 것 갔습니다. 저는 개설 과목, 개설 과정을 인서트 해주는 프로시저를 만드는데 가장 어려움을 느꼈습니다.
 개설 과정 테이블에 데이터를 넣을 때는 기간이 제일 중요한 변수인데 넣고 싶은 기간동안 강의실이 겹치거나 교수님이 겹치면 넣지 못하게 만들어야 합니다. 그런데 논리적으로 시작일과 종료일을 가지고 겹치는 기간을 찾아내는 것이 쉽지가 않았습니다. 이 때 느낀게 프로그래밍이 코딩을 잘하는 것도 좋지만  논리적인 로직을 잘 만드는 것이 조금 더 중요하다는 생각이 들었습니다.  
 마지막으로 자바 때와는 다르게 처음부터 체계적인 테이블 구조나 변수명 데이터 타입을 미리 팀원들과
직접 구현하기 전에 세세하게 통일했다 보니 각자 역할을 맡아서 만들어 온 후에도 합쳤을 때 크게 오류나 트러블이 생기지 않아서 미리 규칙을 잘 정하는 것이 중요하다고 생각했습니다. 
 데이터 베이스 설계를 통해 앞으로 웹에서 이벤트가 발생했을 때 어떻게 설계하면 좋을지 생각을 많이 했던 것 같아서 좋은 시간이 되었습니다.

3. 김태형
오라클 프로젝트를 앞두고 걱정이 많았다. 자바에 비해 조심해야 할 것도 많았고
오라클 속 구조에 대한 이해가 부족한 탓이었다. 하지만 성적 처리 시스템을 ERD 설계부터
구현을 하면서 어렵고 이해가 안 갔던 것들에 대한 의문들이 풀렸다. 예를 들면 식별 관계의 중요성을
느꼈고, 프로시저나 커서, 트리거에 대해 구조적으로 이해가 갔다. 그리고 가장 중요한 건
자바 프로젝트 때처럼 오라클에 대해 점점 재미를 느끼게 되었다는 점이다. 또한 부족했던
코딩 실력이 팀원들 덕분에 여러모로 많은 발전을 할 수 있던 프로젝트였다. 

4. 이연주
1. 데이터 논리 설계를 할 때 효율적으로 구성하는 방법을 아직은 잘 모르겠다. 테이블을 많이 나눌수록 좋은 거라고 생각했는데, 각종 경우의 수를 계산하고 최적의 방법을 찾는 데에 많은 훈련이 필요함을 느꼈다.
1:1, 1:다를 이해할 듯 말 듯 한 느낌이다.(다:다 → 1:다를 진행할 때 파생테이블이 발생한다.)
2. ERD 다이어그램 구성 사이트를 이용할 시 ERD 논리 ~ 물리 설계까지 간편하게 진행된다. 물리 설계는 어렵지 않게 이해됐다.
3. 테이블을 구성에서 PK, FK 와 NOT NULL 기타등등 제약조건은 헷갈리지 않는다.
4. 그러나 쿼리문을 짤 때에 (1)프로시저에서 (2)프로시저의 구성요소를 불러올 경우 서브쿼리와 JOIN을 활용하는게 아직도 많이 헷갈린다.
특히 커서와 루프문을 함께 활용하는 건 쉽게 손대지 못하고 있다. 오라클은 직관적이면서도 어렵다. 
5. 팀원들 덕분에 팀과제를 빠르게, 크게 어렵지 않게 끝냈다. 팀원들에게 감사한다. 

5. 홍수민
프로젝트 요구분석을 처음 접해보았다. 요구분석을 보고 필요한 테이블을 찾아와 ER 다이어그램을 만들어 보는 것부터 만만하지 않았다. 나중에 DB 설계를 할 때 신경 써야 할 부분이 한두 가지가 아니다. 요구분석 사항에서 필요한 프로시저, 트리거 등 정리한 것을 토대로 분담을 했다. 예외 처리를 생각해 줘야 할 경우가 계속해서 생긴다. 예전에는 오류가 나면 두려웠는데 이제는 아무렇지 않고 조금은 어떤 오류인지 알게 되는 것 같아 성장하는 느낌이다. 무엇보다 팀원들이랑 수업 끝나고도 남아서 열심히 고생하여 완성적으로 마무리하였다.

6. 양윤정
그동안 배운 데이터베이스(오라클) 개념을 한번에 정리할 수 있는 기회라 좋았다.
처음에는 오라클로만 프로젝트를 한다고 해서 어떻게 구현이 될지 한편으로는 걱정도 되고 결과물이 궁금하였는데 결과물이 잘 나와서 만족스럽다.
여태 배운 개념들을 유기적으로 연결시켜 하나의 프로그램을 만들어서 신기했다.
조원들과 각자 만든 구문들을 합쳐 하나의 프로그램이 된 것이 뿌듯하고, 보람찼다.
자바 프로젝트를 할 당시, 데이터베이스 없이 하여서 데이터를 저장하고 조회하는 것이 번거로웠는데, 오라클로 하니 정말 편리하다고 느꼈다.
앞으로 웹 프로그래밍 프로젝트를 할때 데이터베이스를 활용하면 데이터 관리가 보다 수월할것 같다.
이번에는 데이터 입력을 오라클에서 하고, 뷰로만 조회를 하였는데, 다음 프로젝트때에는 웹에서 데이터를 입력하고 조회를 할 생각에 기대가 된다.